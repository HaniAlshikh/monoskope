# Copyright 2021 Monoskope Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Golang CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  create:
    tags:
      - v*
  
env:
  GO_MODULE: github.com/finleap-connect/monoskope
  GO_VERSION: 1.17.x
  GINKGO_VERSION: v1.16.4

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run linters
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.39
          args: --timeout=5m

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: test
        run: |
          go install github.com/onsi/ginkgo/ginkgo@${{ env.GINKGO_VERSION }}
          GINKGO=ginkgo make go-test-ci
          make go-coverage
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.8
        with:
          infile: monoskope.coverprofile
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  deliver:
    if: github.event_name == 'create'
    needs: test

    env:
      REGISTRY: ghcr.io
      REPO_OWNER: ${{ github.repository_owner }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        app: [ 'gateway' , 'eventstore', 'commandhandler', 'queryhandler', 'clusterbootstrapreactor' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to github registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.app }}
          tags: |
            type=ref,event=tag
            type=raw,value=0.0.0-{{sha}}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build/package/go.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            APP=${{ matrix.app }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            COMMIT=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            SRC=cmd/${{ matrix.app }}/*.go
            NAME=${{ matrix.app }}
            GO_MODULE=${{ env.GO_MODULE }}
